CREATE TABLE IF NOT EXISTS blogs (
  id INT AUTO_INCREMENT PRIMARY KEY,
  title VARCHAR(255) NOT NULL,
  content TEXT NOT NULL,
  author VARCHAR(100) NOT NULL,
  slug VARCHAR(255) UNIQUE NOT NULL,
  published BOOLEAN DEFAULT FALSE,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

INSERT INTO blogs (title, content, author, slug, published) VALUES
('Getting Started with Java Programming', 'Java is a powerful, object-oriented programming language that has been a cornerstone of software development for decades. In this comprehensive guide, we''ll explore the fundamentals of Java programming and help you get started on your coding journey.\n\n## Why Choose Java?\n\nJava offers several advantages:\n- **Platform Independence**: Write once, run anywhere\n- **Object-Oriented**: Promotes clean, modular code\n- **Strong Memory Management**: Automatic garbage collection\n- **Rich Ecosystem**: Vast libraries and frameworks\n\n## Setting Up Your Environment\n\nTo start coding in Java, you''ll need:\n1. Java Development Kit (JDK)\n2. An Integrated Development Environment (IDE)\n3. Basic understanding of programming concepts\n\n## Your First Java Program\n\n```java\npublic class HelloWorld {\n    public static void main(String[] args) {\n        System.out.println("Hello, World!");\n    }\n}\n```\n\nThis simple program demonstrates the basic structure of a Java application.', 'JavaRanker Team', 'getting-started-with-java', TRUE),

('Understanding Java Data Types', 'Data types are the foundation of any programming language, and Java provides a rich set of built-in data types to handle different kinds of information.\n\n## Primitive Data Types\n\nJava has 8 primitive data types:\n\n### Numeric Types\n- **byte**: 8-bit signed integer (-128 to 127)\n- **short**: 16-bit signed integer (-32,768 to 32,767)\n- **int**: 32-bit signed integer (-2^31 to 2^31-1)\n- **long**: 64-bit signed integer\n- **float**: 32-bit floating point\n- **double**: 64-bit floating point\n\n### Other Types\n- **char**: 16-bit Unicode character\n- **boolean**: true or false\n\n## Examples\n\n```java\nint age = 25;\ndouble salary = 50000.50;\nchar grade = ''A'';\nboolean isActive = true;\n```\n\n## Best Practices\n\n1. Choose the appropriate data type for your needs\n2. Use meaningful variable names\n3. Initialize variables before use\n4. Be mindful of data type ranges', 'JavaRanker Team', 'java-data-types', TRUE),

('Mastering Java Loops', 'Loops are essential control structures that allow you to execute code repeatedly. Java provides several types of loops to handle different scenarios.\n\n## Types of Loops\n\n### For Loop\nPerfect for when you know the number of iterations:\n\n```java\nfor (int i = 0; i < 10; i++) {\n    System.out.println("Count: " + i);\n}\n```\n\n### While Loop\nIdeal for condition-based repetition:\n\n```java\nint count = 0;\nwhile (count < 5) {\n    System.out.println("Count: " + count);\n    count++;\n}\n```\n\n### Do-While Loop\nExecutes at least once:\n\n```java\nint num;\ndo {\n    num = scanner.nextInt();\n} while (num <= 0);\n```\n\n### Enhanced For Loop\nGreat for iterating through collections:\n\n```java\nint[] numbers = {1, 2, 3, 4, 5};\nfor (int num : numbers) {\n    System.out.println(num);\n}\n```\n\n## Loop Control Statements\n\n- **break**: Exits the loop\n- **continue**: Skips current iteration\n- **return**: Exits the method\n\n## Common Pitfalls\n\n1. Infinite loops\n2. Off-by-one errors\n3. Modifying loop variables incorrectly', 'JavaRanker Team', 'mastering-java-loops', TRUE);